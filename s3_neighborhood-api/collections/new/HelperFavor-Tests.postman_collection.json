{
	"info": {
		"_postman_id": "652dd061-9240-47c1-970b-7ce058d1027a",
		"name": "HelperFavor-Tests.postman_collection",
		"description": "Colecci√≥n de pruebas sobre el recurso AuthorBook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create neighborhood for tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4515fb8-152f-4e8a-8cdb-0196a0643f3b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_N\",data.id);",
							"tests[\"Creation of neighborhood for tests\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"HxFDSSSSG\",\n\t\"id\": 10000\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/neighborhoods",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"neighborhoods"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create neighborhood2 for tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4515fb8-152f-4e8a-8cdb-0196a0643f3b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_N2\",data.id);",
							"tests[\"Creation of neighborhood for tests\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"xFFHG\",\n\t\"id\": 20000000000\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/neighborhoods",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"neighborhoods"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create helper1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c9e845f-40eb-4e50-8a3b-2b4c2f298330",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf6ceef-c993-4bed-b150-d635432d9806",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_g1\",data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": \"Cra 73\",\r\n    \"email\": \"blxcdxx@hotmail.com\",\r\n    \"name\": \"Andres Bayona\",\r\n    \"neighborhood\": {\"id\": \"{{new_id_N}}\"},\r\n    \"nickname\": \"AB\",\r\n    \"phoneNumber\": \"1132323\",\r\n    \"preferences\": \"None\",\r\n    \"proofOfResidence\": \"link\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create helper2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c9e845f-40eb-4e50-8a3b-2b4c2f298330",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf6ceef-c993-4bed-b150-d635432d9806",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_g2\",data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": \"Cra 73\",\r\n    \"email\": \"blrxcdxx@hotmail.com\",\r\n    \"name\": \"Andres Bayona\",\r\n    \"neighborhood\": {\"id\": \"{{new_id_N2}}\"},\r\n    \"nickname\": \"AB\",\r\n    \"phoneNumber\": \"1132323\",\r\n    \"preferences\": \"None\",\r\n    \"proofOfResidence\": \"link\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a favor for resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8391fc71-23d9-4d29-9e3a-8ba1274ccd92",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"Free of errors on Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"title\": \"Help\",\r\n\t\"description\": \"desc\",\r\n\t\"type\": \"NN\",\r\n\t\"datePosted\": \"2000-08-20T00:00:00-05:00\"\r\n\t\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_g1}}/favors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_g1}}",
						"favors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a favor2 for resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8391fc71-23d9-4d29-9e3a-8ba1274ccd92",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"Free of errors on Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"title\": \"Help\",\r\n\t\"description\": \"desc\",\r\n\t\"type\": \"NN\",\r\n\t\"datePosted\": \"2000-08-20T00:00:00-05:00\"\r\n\t\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_g1}}/favors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_g1}}",
						"favors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Associate helper with favor",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c9e845f-40eb-4e50-8a3b-2b4c2f298330",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf6ceef-c993-4bed-b150-d635432d9806",
						"exec": [
							"tests[\"Free of errors on Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a}}/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a}}",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a helper from favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"Free of errors on Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a}}/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a}}",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get helper from non associated favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10a04ef5-aca6-43ae-bd0a-b1006aa19487",
						"exec": [
							"tests[\"Cannot obtain a helper fron a non associated favor\"] = responseCode.code === 412;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a}}/helpers/{{new_id_g2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a}}",
						"helpers",
						"{{new_id_g2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all helpers from favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49c94c15-1d54-43ee-adef-aec230710223",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"Free of errors on Get\"] = responseCode.code === 200;",
							"tests[\"helpers count - favor\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a}}/helpers",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a}}",
						"helpers"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get helper from non existing favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get helper from non existing favor\"] = responseCode.code === 404;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/22/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"22",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing helper from  favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get helper from non existing favor\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/22/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"22",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove a helper from favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9510b6cd-b566-4cfa-b16f-9c783800176d",
						"exec": [
							"tests[\"Free of errors on Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a}}/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a}}",
						"helpers",
						"{{new_id_g1}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociaci√≥n entre un libro y un autor. Se env√≠an los ids del autor y del libro creados anteriormente.\n\n**C√≥digo HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Remove helper from non existing favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not delete helper to non existing favor\"] = responseCode.code === 404;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/22/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"22",
						"helpers",
						"{{new_id_g1}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociaci√≥n entre a un libro y un autor que no existe en la aplicaci√≥n.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /favors/0/helpers no existe.\".\r\n\r\n**C√≥digo http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Remove non existing helper from  favor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get helper from non existing favor\"] = responseCode.code === 404;",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/22/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"22",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a helper1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/helpers/{{new_id_g1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"helpers",
						"{{new_id_g1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a helper2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_g2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_g2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a favor1",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a1}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a favor2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/favors/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"favors",
						"{{new_id_a2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete neighborhood",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/neighborhoods/{{new_id_N}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"neighborhoods",
						"{{new_id_N}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete neighborhood2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0d27dd2c-c6e5-47c5-b329-ca38c5433d23",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/neighborhoods/{{new_id_N2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"neighborhoods",
						"{{new_id_N2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "abcf9e66-ab71-40eb-b132-268e8563ad4d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "99c46863-220f-4853-9796-88ddc37ae16a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}