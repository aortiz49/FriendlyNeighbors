{
	"info": {
		"_postman_id": "87d595cd-fc0f-4a3e-910d-b1da61973239",
		"name": "FavorResident-Tests.postman_collection",
		"description": "ColecciÃ³n de pruebas sobre el recurso AuthorBook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create neighborhood for tests",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f4515fb8-152f-4e8a-8cdb-0196a0643f3b",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_N\",data.id);",
							"tests[\"Creation of neighborhood for tests\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"XX\",\n\t\"id\": \"1\"\n\t\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/neighborhoods",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"neighborhoods"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create resident",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c9e845f-40eb-4e50-8a3b-2b4c2f298330",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf6ceef-c993-4bed-b150-d635432d9806",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"Creation of resident for tests\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": \"Cra 73\",\r\n    \"email\": \"blcd@hotmail.com\",\r\n    \"name\": \"Andres Bayona\",\r\n    \"neighborhood\": {\"id\": \"{{new_id_N}}\"},\r\n    \"nickname\": \"AB\",\r\n    \"phoneNumber\": \"1132323\",\r\n    \"preferences\": \"None\",\r\n    \"proofOfResidence\": \"link\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create resident2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c9e845f-40eb-4e50-8a3b-2b4c2f298330",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "aaf6ceef-c993-4bed-b150-d635432d9806",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"Creation of resident for tests\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"address\": \"Cra 73\",\r\n    \"email\": \"blcdxx@hotmail.com\",\r\n    \"name\": \"Andres Bayona\",\r\n    \"neighborhood\": {\"id\": \"{{new_id_N}}\"},\r\n    \"nickname\": \"AB\",\r\n    \"phoneNumber\": \"1132323\",\r\n    \"preferences\": \"None\",\r\n    \"proofOfResidence\": \"link\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a favor for resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8391fc71-23d9-4d29-9e3a-8ba1274ccd92",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_b\",data.id);",
							"tests[\"Free of errors on Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"title\": \"Help\",\r\n\t\"description\": \"desc\",\r\n\t\"type\": \"NN\",\r\n\t\"datePosted\": \"2000-08-20T00:00:00-05:00\"\r\n\t\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a favor for resident2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8391fc71-23d9-4d29-9e3a-8ba1274ccd92",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_b2\",data.id);",
							"tests[\"Free of errors on Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"title\": \"Help\",\r\n\t\"description\": \"desc\",\r\n\t\"type\": \"NN\",\r\n\t\"datePosted\": \"2000-08-20T00:00:00-05:00\"\r\n\t\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a2}}/favors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a2}}",
						"favors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a favor for non exiting resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3c06212-e39e-4bc3-9fd1-8abbd1c29ace",
						"exec": [
							"tests[\"Should not add favor to non existing resident\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\r\n\t\"title\": \"Help\",\r\n\t\"description\": \"desc\",\r\n\t\"type\": \"NN\",\r\n\t\"datePosted\": \"2000-08-20T00:00:00-05:00\"\r\n\t\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/22/favors/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"22",
						"favors",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a favor from resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"Free of errors on Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors",
						"{{new_id_b}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favor from non associated resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10a04ef5-aca6-43ae-bd0a-b1006aa19487",
						"exec": [
							"tests[\"Cannot obtain a favor fron a non associated resident\"] = responseCode.code === 412;",
							"tests[\"Expected message\"] = responseBody.has(\"Favor is not associated with resident\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors/{{new_id_b2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors",
						"{{new_id_b2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get all favors from resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49c94c15-1d54-43ee-adef-aec230710223",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"Free of errors on Get\"] = responseCode.code === 200;",
							"tests[\"favors count - resident\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get favor from non existing resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get favor from non existing resident\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/22/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"22",
						"favors",
						"{{new_id_b}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get non existing favor from  resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get favor from non existing resident\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/22/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"22",
						"favors",
						"{{new_id_b}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove a favor from resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9510b6cd-b566-4cfa-b16f-9c783800176d",
						"exec": [
							"tests[\"Free of errors on Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociaciÃ³n entre un libro y un autor. Se envÃ­an los ids del autor y del libro creados anteriormente.\n\n**CÃ³digo HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Remove favor from non existing resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not delete favor to non existing resident\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/22/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"22",
						"favors",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociaciÃ³n entre a un libro y un autor que no existe en la aplicaciÃ³n.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /residents/0/favors no existe.\".\r\n\r\n**CÃ³digo http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Remove non existing favor from  resident",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"Should not get favor from non existing resident\"] = responseCode.code === 404;",
							"tests[\"Expected message\"] = responseBody.has(\"22 does not exist\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/22/favors/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"22",
						"favors",
						"{{new_id_b}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Remove favor from non associated resident ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10a04ef5-aca6-43ae-bd0a-b1006aa19487",
						"exec": [
							"tests[\"Cannot obtain a favor fron a non associated resident\"] = responseCode.code === 412;",
							"tests[\"Expected message\"] = responseBody.has(\"Favor is not associated with resident\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s3_neighborhood-api/api/residents/{{new_id_a}}/favors/{{new_id_b2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s3_neighborhood-api",
						"api",
						"residents",
						"{{new_id_a}}",
						"favors",
						"{{new_id_b2}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "abcf9e66-ab71-40eb-b132-268e8563ad4d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "99c46863-220f-4853-9796-88ddc37ae16a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}